function cov_21c8s4srje(){var path="/Users/federicolacabaratz/bootcamp/collab/skylab-bootcamp-202001/staff/federico-lacabaratz/share-my-spot/share-my-spot-api/logic/retrieve-spot.js";var hash="0b9e14d17fc9dc668143db4446506e2943843f45";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/federicolacabaratz/bootcamp/collab/skylab-bootcamp-202001/staff/federico-lacabaratz/share-my-spot/share-my-spot-api/logic/retrieve-spot.js",statementMap:{"0":{start:{line:1,column:29},end:{line:1,column:58}},"1":{start:{line:2,column:21},end:{line:2,column:51}},"2":{start:{line:3,column:26},end:{line:3,column:57}},"3":{start:{line:15,column:0},end:{line:35,column:1}},"4":{start:{line:16,column:4},end:{line:16,column:37}},"5":{start:{line:17,column:4},end:{line:17,column:71}},"6":{start:{line:17,column:17},end:{line:17,column:71}},"7":{start:{line:19,column:4},end:{line:34,column:8}},"8":{start:{line:21,column:21},end:{line:21,column:107}},"9":{start:{line:23,column:8},end:{line:23,column:83}},"10":{start:{line:23,column:19},end:{line:23,column:83}},"11":{start:{line:25,column:8},end:{line:25,column:37}},"12":{start:{line:26,column:8},end:{line:26,column:61}},"13":{start:{line:28,column:8},end:{line:28,column:23}},"14":{start:{line:29,column:8},end:{line:29,column:23}},"15":{start:{line:30,column:8},end:{line:30,column:35}},"16":{start:{line:32,column:8},end:{line:32,column:19}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:15,column:17},end:{line:15,column:18}},loc:{start:{line:15,column:27},end:{line:35,column:1}},line:15},"1":{name:"(anonymous_1)",decl:{start:{line:19,column:12},end:{line:19,column:13}},loc:{start:{line:19,column:24},end:{line:34,column:5}},line:19}},branchMap:{"0":{loc:{start:{line:17,column:4},end:{line:17,column:71}},type:"if",locations:[{start:{line:17,column:4},end:{line:17,column:71}},{start:{line:17,column:4},end:{line:17,column:71}}],line:17},"1":{loc:{start:{line:23,column:8},end:{line:23,column:83}},type:"if",locations:[{start:{line:23,column:8},end:{line:23,column:83}},{start:{line:23,column:8},end:{line:23,column:83}}],line:23}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0b9e14d17fc9dc668143db4446506e2943843f45"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_21c8s4srje=function(){return actualCoverage;};return actualCoverage;}cov_21c8s4srje();const{models:{Spot}}=(cov_21c8s4srje().s[0]++,require('share-my-spot-data'));const{validate}=(cov_21c8s4srje().s[1]++,require('share-my-spot-utils'));const{NotFoundError}=(cov_21c8s4srje().s[2]++,require('share-my-spot-errors'));/**
 * Retrieves a specific spot I have published
 * 
 * @param {string} spotId spot's unique id number
 * 
 * @returns {Promise<string>} returns the spot that I am requesting
 * 
 * @throws {NotFoundError} on not found spot id 
 */cov_21c8s4srje().s[3]++;module.exports=spotId=>{cov_21c8s4srje().f[0]++;cov_21c8s4srje().s[4]++;validate.string(spotId,'spotId');cov_21c8s4srje().s[5]++;if(!spotId){cov_21c8s4srje().b[0][0]++;cov_21c8s4srje().s[6]++;throw new NotFoundError(`${spotId} is not a valid id`);}else{cov_21c8s4srje().b[0][1]++;}cov_21c8s4srje().s[7]++;return(async()=>{cov_21c8s4srje().f[1]++;const spot=(cov_21c8s4srje().s[8]++,await Spot.findById(spotId).populate("publisherId","name surname email phone").lean());cov_21c8s4srje().s[9]++;if(!spot){cov_21c8s4srje().b[1][0]++;cov_21c8s4srje().s[10]++;throw new NotFoundError(`spot with id ${spotId} doesn't exists`);}else{cov_21c8s4srje().b[1][1]++;}cov_21c8s4srje().s[11]++;spot.id=spot._id.toString();cov_21c8s4srje().s[12]++;spot.publisherId.id=spot.publisherId._id.toString();cov_21c8s4srje().s[13]++;delete spot._id;cov_21c8s4srje().s[14]++;delete spot.__v;cov_21c8s4srje().s[15]++;delete spot.publisherId._id;cov_21c8s4srje().s[16]++;return spot;})();};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJldHJpZXZlLXNwb3QuanMiXSwibmFtZXMiOlsibW9kZWxzIiwiU3BvdCIsInJlcXVpcmUiLCJ2YWxpZGF0ZSIsIk5vdEZvdW5kRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwic3BvdElkIiwic3RyaW5nIiwic3BvdCIsImZpbmRCeUlkIiwicG9wdWxhdGUiLCJsZWFuIiwiaWQiLCJfaWQiLCJ0b1N0cmluZyIsInB1Ymxpc2hlcklkIiwiX192Il0sIm1hcHBpbmdzIjoidWtGQUFBLEtBQU0sQ0FBRUEsTUFBTSxDQUFFLENBQUVDLElBQUYsQ0FBViwyQkFBdUJDLE9BQU8sQ0FBQyxvQkFBRCxDQUE5QixDQUFOLENBQ0EsS0FBTSxDQUFFQyxRQUFGLDJCQUFlRCxPQUFPLENBQUMscUJBQUQsQ0FBdEIsQ0FBTixDQUNBLEtBQU0sQ0FBRUUsYUFBRiwyQkFBb0JGLE9BQU8sQ0FBQyxzQkFBRCxDQUEzQixDQUFOLENBRUE7Ozs7Ozs7OzJCQVVBRyxNQUFNLENBQUNDLE9BQVAsQ0FBaUJDLE1BQU0sRUFBSSxpREFDdkJKLFFBQVEsQ0FBQ0ssTUFBVCxDQUFnQkQsTUFBaEIsQ0FBd0IsUUFBeEIsRUFEdUIsd0JBRXZCLEdBQUksQ0FBQ0EsTUFBTCxDQUFhLHlEQUFNLElBQUlILENBQUFBLGFBQUosQ0FBbUIsR0FBRUcsTUFBTyxvQkFBNUIsQ0FBTixDQUFzRCxDQUFuRSxpQ0FGdUIsd0JBSXZCLE1BQU8sQ0FBQyxTQUFZLHlCQUVoQixLQUFNRSxDQUFBQSxJQUFJLDBCQUFHLEtBQU1SLENBQUFBLElBQUksQ0FBQ1MsUUFBTCxDQUFjSCxNQUFkLEVBQXNCSSxRQUF0QixDQUErQixhQUEvQixDQUE4QywwQkFBOUMsRUFBMEVDLElBQTFFLEVBQVQsQ0FBVixDQUZnQix3QkFJaEIsR0FBSSxDQUFDSCxJQUFMLENBQVcsMERBQU0sSUFBSUwsQ0FBQUEsYUFBSixDQUFtQixnQkFBZUcsTUFBTyxpQkFBekMsQ0FBTixDQUFnRSxDQUEzRSxpQ0FKZ0IseUJBTWhCRSxJQUFJLENBQUNJLEVBQUwsQ0FBVUosSUFBSSxDQUFDSyxHQUFMLENBQVNDLFFBQVQsRUFBVixDQU5nQix5QkFPaEJOLElBQUksQ0FBQ08sV0FBTCxDQUFpQkgsRUFBakIsQ0FBc0JKLElBQUksQ0FBQ08sV0FBTCxDQUFpQkYsR0FBakIsQ0FBcUJDLFFBQXJCLEVBQXRCLENBUGdCLHlCQVNoQixNQUFPTixDQUFBQSxJQUFJLENBQUNLLEdBQVosQ0FUZ0IseUJBVWhCLE1BQU9MLENBQUFBLElBQUksQ0FBQ1EsR0FBWixDQVZnQix5QkFXaEIsTUFBT1IsQ0FBQUEsSUFBSSxDQUFDTyxXQUFMLENBQWlCRixHQUF4QixDQVhnQix5QkFhaEIsTUFBT0wsQ0FBQUEsSUFBUCxDQUVILENBZk0sR0FBUCxDQWdCSCxDQXBCRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgbW9kZWxzOiB7IFNwb3QgfSB9ID0gcmVxdWlyZSgnc2hhcmUtbXktc3BvdC1kYXRhJylcbmNvbnN0IHsgdmFsaWRhdGUgfSA9IHJlcXVpcmUoJ3NoYXJlLW15LXNwb3QtdXRpbHMnKVxuY29uc3QgeyBOb3RGb3VuZEVycm9yIH0gPSByZXF1aXJlKCdzaGFyZS1teS1zcG90LWVycm9ycycpXG5cbi8qKlxuICogUmV0cmlldmVzIGEgc3BlY2lmaWMgc3BvdCBJIGhhdmUgcHVibGlzaGVkXG4gKiBcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcG90SWQgc3BvdCdzIHVuaXF1ZSBpZCBudW1iZXJcbiAqIFxuICogQHJldHVybnMge1Byb21pc2U8c3RyaW5nPn0gcmV0dXJucyB0aGUgc3BvdCB0aGF0IEkgYW0gcmVxdWVzdGluZ1xuICogXG4gKiBAdGhyb3dzIHtOb3RGb3VuZEVycm9yfSBvbiBub3QgZm91bmQgc3BvdCBpZCBcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNwb3RJZCA9PiB7XG4gICAgdmFsaWRhdGUuc3RyaW5nKHNwb3RJZCwgJ3Nwb3RJZCcpXG4gICAgaWYgKCFzcG90SWQpIHRocm93IG5ldyBOb3RGb3VuZEVycm9yKGAke3Nwb3RJZH0gaXMgbm90IGEgdmFsaWQgaWRgKVxuXG4gICAgcmV0dXJuIChhc3luYyAoKSA9PiB7XG4gICAgICAgIFxuICAgICAgICBjb25zdCBzcG90ID0gYXdhaXQgU3BvdC5maW5kQnlJZChzcG90SWQpLnBvcHVsYXRlKFwicHVibGlzaGVySWRcIiwgXCJuYW1lIHN1cm5hbWUgZW1haWwgcGhvbmVcIikubGVhbigpICBcblxuICAgICAgICBpZiAoIXNwb3QpIHRocm93IG5ldyBOb3RGb3VuZEVycm9yKGBzcG90IHdpdGggaWQgJHtzcG90SWR9IGRvZXNuJ3QgZXhpc3RzYClcblxuICAgICAgICBzcG90LmlkID0gc3BvdC5faWQudG9TdHJpbmcoKVxuICAgICAgICBzcG90LnB1Ymxpc2hlcklkLmlkID0gc3BvdC5wdWJsaXNoZXJJZC5faWQudG9TdHJpbmcoKVxuXG4gICAgICAgIGRlbGV0ZSBzcG90Ll9pZFxuICAgICAgICBkZWxldGUgc3BvdC5fX3ZcbiAgICAgICAgZGVsZXRlIHNwb3QucHVibGlzaGVySWQuX2lkXG5cbiAgICAgICAgcmV0dXJuIHNwb3RcblxuICAgIH0pKClcbn0iXX0=