function cov_hb02vkvta(){var path="/Users/federicolacabaratz/bootcamp/collab/skylab-bootcamp-202001/staff/federico-lacabaratz/share-my-spot/share-my-spot-api/logic/book-spot.js";var hash="8eb6f91e1046e4d37fcacaddacd251b701412090";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/federicolacabaratz/bootcamp/collab/skylab-bootcamp-202001/staff/federico-lacabaratz/share-my-spot/share-my-spot-api/logic/book-spot.js",statementMap:{"0":{start:{line:1,column:21},end:{line:1,column:57}},"1":{start:{line:2,column:35},end:{line:2,column:70}},"2":{start:{line:3,column:41},end:{line:3,column:78}},"3":{start:{line:17,column:0},end:{line:39,column:1}},"4":{start:{line:18,column:4},end:{line:18,column:47}},"5":{start:{line:19,column:4},end:{line:19,column:37}},"6":{start:{line:21,column:4},end:{line:38,column:8}},"7":{start:{line:22,column:21},end:{line:22,column:53}},"8":{start:{line:23,column:8},end:{line:23,column:96}},"9":{start:{line:23,column:19},end:{line:23,column:96}},"10":{start:{line:25,column:21},end:{line:25,column:48}},"11":{start:{line:26,column:8},end:{line:26,column:78}},"12":{start:{line:26,column:19},end:{line:26,column:78}},"13":{start:{line:28,column:8},end:{line:28,column:94}},"14":{start:{line:28,column:40},end:{line:28,column:94}},"15":{start:{line:30,column:39},end:{line:30,column:103}},"16":{start:{line:30,column:73},end:{line:30,column:102}},"17":{start:{line:32,column:8},end:{line:32,column:136}},"18":{start:{line:32,column:36},end:{line:32,column:136}},"19":{start:{line:34,column:8},end:{line:34,column:48}},"20":{start:{line:36,column:8},end:{line:37,column:28}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:17},end:{line:17,column:18}},loc:{start:{line:17,column:42},end:{line:39,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:21,column:12},end:{line:21,column:13}},loc:{start:{line:21,column:24},end:{line:38,column:5}},line:21},"2":{name:"(anonymous_2)",decl:{start:{line:30,column:67},end:{line:30,column:68}},loc:{start:{line:30,column:73},end:{line:30,column:102}},line:30},"3":{name:"(anonymous_3)",decl:{start:{line:37,column:18},end:{line:37,column:19}},loc:{start:{line:37,column:24},end:{line:37,column:27}},line:37}},branchMap:{"0":{loc:{start:{line:23,column:8},end:{line:23,column:96}},type:"if",locations:[{start:{line:23,column:8},end:{line:23,column:96}},{start:{line:23,column:8},end:{line:23,column:96}}],line:23},"1":{loc:{start:{line:26,column:8},end:{line:26,column:78}},type:"if",locations:[{start:{line:26,column:8},end:{line:26,column:78}},{start:{line:26,column:8},end:{line:26,column:78}}],line:26},"2":{loc:{start:{line:28,column:8},end:{line:28,column:94}},type:"if",locations:[{start:{line:28,column:8},end:{line:28,column:94}},{start:{line:28,column:8},end:{line:28,column:94}}],line:28},"3":{loc:{start:{line:32,column:8},end:{line:32,column:136}},type:"if",locations:[{start:{line:32,column:8},end:{line:32,column:136}},{start:{line:32,column:8},end:{line:32,column:136}}],line:32}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"8eb6f91e1046e4d37fcacaddacd251b701412090"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_hb02vkvta=function(){return actualCoverage;};return actualCoverage;}cov_hb02vkvta();const{validate}=(cov_hb02vkvta().s[0]++,require('../../share-my-spot-utils'));const{models:{User,Spot}}=(cov_hb02vkvta().s[1]++,require('../../share-my-spot-data'));const{NotFoundError,ConflictError}=(cov_hb02vkvta().s[2]++,require('../../share-my-spot-errors'));/**
 * Creates a request for booking on a specific spot
 * 
 * @param {string} candidateId user's unique id number (candidate)
 * @param {string} spotId spot's unique id number (spot)
 * 
 * @returns {Promise<string>} returns an empty Promise on a successful booking request
 * 
 * @throws {NotFoundError} on not found data
 * @throws {ConflictError} when conflicts exists contrasting provided data and existing data inside bookingCandidates array
 */cov_hb02vkvta().s[3]++;module.exports=(candidateId,spotId)=>{cov_hb02vkvta().f[0]++;cov_hb02vkvta().s[4]++;validate.string(candidateId,'candidateId');cov_hb02vkvta().s[5]++;validate.string(spotId,'spotId');cov_hb02vkvta().s[6]++;return(async()=>{cov_hb02vkvta().f[1]++;const user=(cov_hb02vkvta().s[7]++,await User.findById(candidateId));cov_hb02vkvta().s[8]++;if(!user){cov_hb02vkvta().b[0][0]++;cov_hb02vkvta().s[9]++;throw new NotFoundError(`booking candidate with id ${candidateId} not found`);}else{cov_hb02vkvta().b[0][1]++;}const spot=(cov_hb02vkvta().s[10]++,await Spot.findById(spotId));cov_hb02vkvta().s[11]++;if(!spot){cov_hb02vkvta().b[1][0]++;cov_hb02vkvta().s[12]++;throw new NotFoundError(`spot with id ${spotId} not found`);}else{cov_hb02vkvta().b[1][1]++;}cov_hb02vkvta().s[13]++;if(spot.status!=='available'){cov_hb02vkvta().b[2][0]++;cov_hb02vkvta().s[14]++;throw new ConflictError('spot has already been taken');}else{cov_hb02vkvta().b[2][1]++;}const candidateAlreadyExists=(cov_hb02vkvta().s[15]++,spot.bookingCandidates.some(id=>{cov_hb02vkvta().f[2]++;cov_hb02vkvta().s[16]++;return id.toString()===candidateId;}));cov_hb02vkvta().s[17]++;if(candidateAlreadyExists){cov_hb02vkvta().b[3][0]++;cov_hb02vkvta().s[18]++;throw new ConflictError(`candidate with ${candidateId} ID is already within our booking candidates`);}else{cov_hb02vkvta().b[3][1]++;}cov_hb02vkvta().s[19]++;spot.bookingCandidates.push(candidateId);cov_hb02vkvta().s[20]++;return spot.save().then(()=>{cov_hb02vkvta().f[3]++;});})();};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvb2stc3BvdC5qcyJdLCJuYW1lcyI6WyJ2YWxpZGF0ZSIsInJlcXVpcmUiLCJtb2RlbHMiLCJVc2VyIiwiU3BvdCIsIk5vdEZvdW5kRXJyb3IiLCJDb25mbGljdEVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyIsImNhbmRpZGF0ZUlkIiwic3BvdElkIiwic3RyaW5nIiwidXNlciIsImZpbmRCeUlkIiwic3BvdCIsInN0YXR1cyIsImNhbmRpZGF0ZUFscmVhZHlFeGlzdHMiLCJib29raW5nQ2FuZGlkYXRlcyIsInNvbWUiLCJpZCIsInRvU3RyaW5nIiwicHVzaCIsInNhdmUiLCJ0aGVuIl0sIm1hcHBpbmdzIjoiOGdIQUFBLEtBQU0sQ0FBRUEsUUFBRiwwQkFBZUMsT0FBTyxDQUFDLDJCQUFELENBQXRCLENBQU4sQ0FDQSxLQUFNLENBQUVDLE1BQU0sQ0FBRSxDQUFFQyxJQUFGLENBQVFDLElBQVIsQ0FBViwwQkFBNkJILE9BQU8sQ0FBQywwQkFBRCxDQUFwQyxDQUFOLENBQ0EsS0FBTSxDQUFFSSxhQUFGLENBQWlCQyxhQUFqQiwwQkFBbUNMLE9BQU8sQ0FBQyw0QkFBRCxDQUExQyxDQUFOLENBRUE7Ozs7Ozs7Ozs7MEJBWUFNLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQixDQUFDQyxXQUFELENBQWNDLE1BQWQsR0FBeUIsK0NBQ3RDVixRQUFRLENBQUNXLE1BQVQsQ0FBZ0JGLFdBQWhCLENBQTZCLGFBQTdCLEVBRHNDLHVCQUV0Q1QsUUFBUSxDQUFDVyxNQUFULENBQWdCRCxNQUFoQixDQUF3QixRQUF4QixFQUZzQyx1QkFJdEMsTUFBTyxDQUFDLFNBQVksd0JBQ2hCLEtBQU1FLENBQUFBLElBQUkseUJBQUcsS0FBTVQsQ0FBQUEsSUFBSSxDQUFDVSxRQUFMLENBQWNKLFdBQWQsQ0FBVCxDQUFWLENBRGdCLHVCQUVoQixHQUFJLENBQUNHLElBQUwsQ0FBVyx1REFBTSxJQUFJUCxDQUFBQSxhQUFKLENBQW1CLDZCQUE0QkksV0FBWSxZQUEzRCxDQUFOLENBQTZFLENBQXhGLGdDQUVBLEtBQU1LLENBQUFBLElBQUksMEJBQUcsS0FBTVYsQ0FBQUEsSUFBSSxDQUFDUyxRQUFMLENBQWNILE1BQWQsQ0FBVCxDQUFWLENBSmdCLHdCQUtoQixHQUFJLENBQUNJLElBQUwsQ0FBVyx3REFBTSxJQUFJVCxDQUFBQSxhQUFKLENBQW1CLGdCQUFlSyxNQUFPLFlBQXpDLENBQU4sQ0FBMkQsQ0FBdEUsZ0NBTGdCLHdCQU9oQixHQUFHSSxJQUFJLENBQUNDLE1BQUwsR0FBZ0IsV0FBbkIsQ0FBZ0Msd0RBQU0sSUFBSVQsQ0FBQUEsYUFBSixDQUFrQiw2QkFBbEIsQ0FBTixDQUFzRCxDQUF0RixnQ0FFQSxLQUFNVSxDQUFBQSxzQkFBc0IsMEJBQUdGLElBQUksQ0FBQ0csaUJBQUwsQ0FBdUJDLElBQXZCLENBQTRCQyxFQUFFLEVBQUksc0RBQUFBLENBQUFBLEVBQUUsQ0FBQ0MsUUFBSCxLQUFrQlgsV0FBbEIsQ0FBNkIsQ0FBL0QsQ0FBSCxDQUE1QixDQVRnQix3QkFXaEIsR0FBSU8sc0JBQUosQ0FBNEIsd0RBQU0sSUFBSVYsQ0FBQUEsYUFBSixDQUFtQixrQkFBaUJHLFdBQVksOENBQWhELENBQU4sQ0FBb0csQ0FBaEksZ0NBWGdCLHdCQWFoQkssSUFBSSxDQUFDRyxpQkFBTCxDQUF1QkksSUFBdkIsQ0FBNEJaLFdBQTVCLEVBYmdCLHdCQWVoQixNQUFPSyxDQUFBQSxJQUFJLENBQUNRLElBQUwsR0FDRkMsSUFERSxDQUNHLElBQU0sd0JBQUcsQ0FEWixDQUFQLENBRUgsQ0FqQk0sR0FBUCxDQWtCSCxDQXRCRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgdmFsaWRhdGUgfSA9IHJlcXVpcmUoJy4uLy4uL3NoYXJlLW15LXNwb3QtdXRpbHMnKVxuY29uc3QgeyBtb2RlbHM6IHsgVXNlciwgU3BvdCB9IH0gPSByZXF1aXJlKCcuLi8uLi9zaGFyZS1teS1zcG90LWRhdGEnKVxuY29uc3QgeyBOb3RGb3VuZEVycm9yLCBDb25mbGljdEVycm9yIH0gPSByZXF1aXJlKCcuLi8uLi9zaGFyZS1teS1zcG90LWVycm9ycycpXG5cbi8qKlxuICogQ3JlYXRlcyBhIHJlcXVlc3QgZm9yIGJvb2tpbmcgb24gYSBzcGVjaWZpYyBzcG90XG4gKiBcbiAqIEBwYXJhbSB7c3RyaW5nfSBjYW5kaWRhdGVJZCB1c2VyJ3MgdW5pcXVlIGlkIG51bWJlciAoY2FuZGlkYXRlKVxuICogQHBhcmFtIHtzdHJpbmd9IHNwb3RJZCBzcG90J3MgdW5pcXVlIGlkIG51bWJlciAoc3BvdClcbiAqIFxuICogQHJldHVybnMge1Byb21pc2U8c3RyaW5nPn0gcmV0dXJucyBhbiBlbXB0eSBQcm9taXNlIG9uIGEgc3VjY2Vzc2Z1bCBib29raW5nIHJlcXVlc3RcbiAqIFxuICogQHRocm93cyB7Tm90Rm91bmRFcnJvcn0gb24gbm90IGZvdW5kIGRhdGFcbiAqIEB0aHJvd3Mge0NvbmZsaWN0RXJyb3J9IHdoZW4gY29uZmxpY3RzIGV4aXN0cyBjb250cmFzdGluZyBwcm92aWRlZCBkYXRhIGFuZCBleGlzdGluZyBkYXRhIGluc2lkZSBib29raW5nQ2FuZGlkYXRlcyBhcnJheVxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gKGNhbmRpZGF0ZUlkLCBzcG90SWQpID0+IHtcbiAgICB2YWxpZGF0ZS5zdHJpbmcoY2FuZGlkYXRlSWQsICdjYW5kaWRhdGVJZCcpXG4gICAgdmFsaWRhdGUuc3RyaW5nKHNwb3RJZCwgJ3Nwb3RJZCcpXG5cbiAgICByZXR1cm4gKGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXIuZmluZEJ5SWQoY2FuZGlkYXRlSWQpXG4gICAgICAgIGlmICghdXNlcikgdGhyb3cgbmV3IE5vdEZvdW5kRXJyb3IoYGJvb2tpbmcgY2FuZGlkYXRlIHdpdGggaWQgJHtjYW5kaWRhdGVJZH0gbm90IGZvdW5kYClcblxuICAgICAgICBjb25zdCBzcG90ID0gYXdhaXQgU3BvdC5maW5kQnlJZChzcG90SWQpXG4gICAgICAgIGlmICghc3BvdCkgdGhyb3cgbmV3IE5vdEZvdW5kRXJyb3IoYHNwb3Qgd2l0aCBpZCAke3Nwb3RJZH0gbm90IGZvdW5kYClcblxuICAgICAgICBpZihzcG90LnN0YXR1cyAhPT0gJ2F2YWlsYWJsZScpIHRocm93IG5ldyBDb25mbGljdEVycm9yKCdzcG90IGhhcyBhbHJlYWR5IGJlZW4gdGFrZW4nKVxuXG4gICAgICAgIGNvbnN0IGNhbmRpZGF0ZUFscmVhZHlFeGlzdHMgPSBzcG90LmJvb2tpbmdDYW5kaWRhdGVzLnNvbWUoaWQgPT4gaWQudG9TdHJpbmcoKSA9PT0gY2FuZGlkYXRlSWQpXG5cbiAgICAgICAgaWYgKGNhbmRpZGF0ZUFscmVhZHlFeGlzdHMpIHRocm93IG5ldyBDb25mbGljdEVycm9yKGBjYW5kaWRhdGUgd2l0aCAke2NhbmRpZGF0ZUlkfSBJRCBpcyBhbHJlYWR5IHdpdGhpbiBvdXIgYm9va2luZyBjYW5kaWRhdGVzYClcbiAgICAgICAgIFxuICAgICAgICBzcG90LmJvb2tpbmdDYW5kaWRhdGVzLnB1c2goY2FuZGlkYXRlSWQpXG5cbiAgICAgICAgcmV0dXJuIHNwb3Quc2F2ZSgpXG4gICAgICAgICAgICAudGhlbigoKSA9PiB7IH0pXG4gICAgfSkoKVxufVxuIl19