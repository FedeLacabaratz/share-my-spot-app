function cov_1uuub8bm3n(){var path="/Users/federicolacabaratz/bootcamp/collab/skylab-bootcamp-202001/staff/federico-lacabaratz/share-my-spot/share-my-spot-api/logic/update-spot.js";var hash="66173acc01f9e476b1c3b3e64eb3f51d1dbbbd84";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/federicolacabaratz/bootcamp/collab/skylab-bootcamp-202001/staff/federico-lacabaratz/share-my-spot/share-my-spot-api/logic/update-spot.js",statementMap:{"0":{start:{line:1,column:21},end:{line:1,column:51}},"1":{start:{line:2,column:35},end:{line:2,column:64}},"2":{start:{line:3,column:26},end:{line:3,column:57}},"3":{start:{line:16,column:0},end:{line:41,column:1}},"4":{start:{line:17,column:4},end:{line:17,column:37}},"5":{start:{line:18,column:4},end:{line:18,column:39}},"6":{start:{line:19,column:4},end:{line:19,column:37}},"7":{start:{line:21,column:4},end:{line:39,column:8}},"8":{start:{line:23,column:21},end:{line:23,column:48}},"9":{start:{line:25,column:8},end:{line:25,column:78}},"10":{start:{line:25,column:19},end:{line:25,column:78}},"11":{start:{line:27,column:8},end:{line:27,column:132}},"12":{start:{line:29,column:21},end:{line:29,column:48}},"13":{start:{line:31,column:8},end:{line:31,column:78}},"14":{start:{line:31,column:19},end:{line:31,column:78}},"15":{start:{line:33,column:8},end:{line:33,column:33}},"16":{start:{line:35,column:8},end:{line:35,column:25}},"17":{start:{line:37,column:8},end:{line:37,column:19}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:16,column:17},end:{line:16,column:18}},loc:{start:{line:16,column:43},end:{line:41,column:1}},line:16},"1":{name:"(anonymous_1)",decl:{start:{line:21,column:12},end:{line:21,column:13}},loc:{start:{line:21,column:23},end:{line:39,column:5}},line:21}},branchMap:{"0":{loc:{start:{line:25,column:8},end:{line:25,column:78}},type:"if",locations:[{start:{line:25,column:8},end:{line:25,column:78}},{start:{line:25,column:8},end:{line:25,column:78}}],line:25},"1":{loc:{start:{line:31,column:8},end:{line:31,column:78}},type:"if",locations:[{start:{line:31,column:8},end:{line:31,column:78}},{start:{line:31,column:8},end:{line:31,column:78}}],line:31}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"66173acc01f9e476b1c3b3e64eb3f51d1dbbbd84"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_1uuub8bm3n=function(){return actualCoverage;};return actualCoverage;}cov_1uuub8bm3n();const{validate}=(cov_1uuub8bm3n().s[0]++,require('share-my-spot-utils'));const{models:{User,Spot}}=(cov_1uuub8bm3n().s[1]++,require('share-my-spot-data'));const{NotFoundError}=(cov_1uuub8bm3n().s[2]++,require('share-my-spot-errors'));/**
 * Updates the spot info
 * 
 * @param {string} userId user's unique id
 * @param {object} body the elements that will be updated
 * @param {string} spotId spot's unique id
 * 
 * @returns {Promise<string>} an empty Promise on a successful update
 * 
 */cov_1uuub8bm3n().s[3]++;module.exports=(userId,body,spotId)=>{cov_1uuub8bm3n().f[0]++;cov_1uuub8bm3n().s[4]++;validate.string(userId,'userId');cov_1uuub8bm3n().s[5]++;validate.type(body,'body',Object);cov_1uuub8bm3n().s[6]++;validate.string(spotId,'spotId');cov_1uuub8bm3n().s[7]++;return(async()=>{cov_1uuub8bm3n().f[1]++;const user=(cov_1uuub8bm3n().s[8]++,await User.findById(userId));cov_1uuub8bm3n().s[9]++;if(!user){cov_1uuub8bm3n().b[0][0]++;cov_1uuub8bm3n().s[10]++;throw new NotFoundError(`user with id ${userId} not found`);}else{cov_1uuub8bm3n().b[0][1]++;}cov_1uuub8bm3n().s[11]++;await Spot.findOneAndUpdate({_id:spotId,publisherId:userId},{$set:body,bookingCandidates:[],status:'available'});const spot=(cov_1uuub8bm3n().s[12]++,await Spot.findById(spotId));cov_1uuub8bm3n().s[13]++;if(!spot){cov_1uuub8bm3n().b[1][0]++;cov_1uuub8bm3n().s[14]++;throw new NotFoundError(`spot with id ${spotId} not found`);}else{cov_1uuub8bm3n().b[1][1]++;}cov_1uuub8bm3n().s[15]++;spot.bookedTo=undefined;cov_1uuub8bm3n().s[16]++;await spot.save();cov_1uuub8bm3n().s[17]++;return spot;})();};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwZGF0ZS1zcG90LmpzIl0sIm5hbWVzIjpbInZhbGlkYXRlIiwicmVxdWlyZSIsIm1vZGVscyIsIlVzZXIiLCJTcG90IiwiTm90Rm91bmRFcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiLCJ1c2VySWQiLCJib2R5Iiwic3BvdElkIiwic3RyaW5nIiwidHlwZSIsIk9iamVjdCIsInVzZXIiLCJmaW5kQnlJZCIsImZpbmRPbmVBbmRVcGRhdGUiLCJfaWQiLCJwdWJsaXNoZXJJZCIsIiRzZXQiLCJib29raW5nQ2FuZGlkYXRlcyIsInN0YXR1cyIsInNwb3QiLCJib29rZWRUbyIsInVuZGVmaW5lZCIsInNhdmUiXSwibWFwcGluZ3MiOiJtb0ZBQUEsS0FBTSxDQUFFQSxRQUFGLDJCQUFlQyxPQUFPLENBQUMscUJBQUQsQ0FBdEIsQ0FBTixDQUNBLEtBQU0sQ0FBRUMsTUFBTSxDQUFFLENBQUVDLElBQUYsQ0FBUUMsSUFBUixDQUFWLDJCQUE2QkgsT0FBTyxDQUFDLG9CQUFELENBQXBDLENBQU4sQ0FDQSxLQUFNLENBQUVJLGFBQUYsMkJBQW9CSixPQUFPLENBQUMsc0JBQUQsQ0FBM0IsQ0FBTixDQUVBOzs7Ozs7Ozs7MkJBV0FLLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQixDQUFDQyxNQUFELENBQVNDLElBQVQsQ0FBZUMsTUFBZixHQUEwQixpREFDdkNWLFFBQVEsQ0FBQ1csTUFBVCxDQUFnQkgsTUFBaEIsQ0FBd0IsUUFBeEIsRUFEdUMsd0JBRXZDUixRQUFRLENBQUNZLElBQVQsQ0FBY0gsSUFBZCxDQUFvQixNQUFwQixDQUE0QkksTUFBNUIsRUFGdUMsd0JBR3ZDYixRQUFRLENBQUNXLE1BQVQsQ0FBZ0JELE1BQWhCLENBQXdCLFFBQXhCLEVBSHVDLHdCQUt2QyxNQUFPLENBQUMsU0FBVyx5QkFFZixLQUFNSSxDQUFBQSxJQUFJLDBCQUFHLEtBQU1YLENBQUFBLElBQUksQ0FBQ1ksUUFBTCxDQUFjUCxNQUFkLENBQVQsQ0FBVixDQUZlLHdCQUlmLEdBQUksQ0FBQ00sSUFBTCxDQUFXLDBEQUFNLElBQUlULENBQUFBLGFBQUosQ0FBbUIsZ0JBQWVHLE1BQU8sWUFBekMsQ0FBTixDQUEyRCxDQUF0RSxpQ0FKZSx5QkFNZixLQUFNSixDQUFBQSxJQUFJLENBQUNZLGdCQUFMLENBQXNCLENBQUVDLEdBQUcsQ0FBRVAsTUFBUCxDQUFlUSxXQUFXLENBQUVWLE1BQTVCLENBQXRCLENBQTRELENBQUVXLElBQUksQ0FBRVYsSUFBUixDQUFjVyxpQkFBaUIsQ0FBRSxFQUFqQyxDQUFxQ0MsTUFBTSxDQUFFLFdBQTdDLENBQTVELENBQU4sQ0FFQSxLQUFNQyxDQUFBQSxJQUFJLDJCQUFHLEtBQU1sQixDQUFBQSxJQUFJLENBQUNXLFFBQUwsQ0FBY0wsTUFBZCxDQUFULENBQVYsQ0FSZSx5QkFVZixHQUFJLENBQUNZLElBQUwsQ0FBVywwREFBTSxJQUFJakIsQ0FBQUEsYUFBSixDQUFtQixnQkFBZUssTUFBTyxZQUF6QyxDQUFOLENBQTJELENBQXRFLGlDQVZlLHlCQVlmWSxJQUFJLENBQUNDLFFBQUwsQ0FBZ0JDLFNBQWhCLENBWmUseUJBY2YsS0FBTUYsQ0FBQUEsSUFBSSxDQUFDRyxJQUFMLEVBQU4sQ0FkZSx5QkFnQmYsTUFBT0gsQ0FBQUEsSUFBUCxDQUVILENBbEJNLEdBQVAsQ0FvQkgsQ0F6QkQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IHZhbGlkYXRlIH0gPSByZXF1aXJlKCdzaGFyZS1teS1zcG90LXV0aWxzJylcbmNvbnN0IHsgbW9kZWxzOiB7IFVzZXIsIFNwb3QgfSB9ID0gcmVxdWlyZSgnc2hhcmUtbXktc3BvdC1kYXRhJylcbmNvbnN0IHsgTm90Rm91bmRFcnJvciB9ID0gcmVxdWlyZSgnc2hhcmUtbXktc3BvdC1lcnJvcnMnKSBcblxuLyoqXG4gKiBVcGRhdGVzIHRoZSBzcG90IGluZm9cbiAqIFxuICogQHBhcmFtIHtzdHJpbmd9IHVzZXJJZCB1c2VyJ3MgdW5pcXVlIGlkXG4gKiBAcGFyYW0ge29iamVjdH0gYm9keSB0aGUgZWxlbWVudHMgdGhhdCB3aWxsIGJlIHVwZGF0ZWRcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcG90SWQgc3BvdCdzIHVuaXF1ZSBpZFxuICogXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmc+fSBhbiBlbXB0eSBQcm9taXNlIG9uIGEgc3VjY2Vzc2Z1bCB1cGRhdGVcbiAqIFxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gKHVzZXJJZCwgYm9keSwgc3BvdElkKSA9PiB7XG4gICAgdmFsaWRhdGUuc3RyaW5nKHVzZXJJZCwgJ3VzZXJJZCcpXG4gICAgdmFsaWRhdGUudHlwZShib2R5LCAnYm9keScsIE9iamVjdClcbiAgICB2YWxpZGF0ZS5zdHJpbmcoc3BvdElkLCAnc3BvdElkJylcblxuICAgIHJldHVybiAoYXN5bmMgKCk9PiB7XG5cbiAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXIuZmluZEJ5SWQodXNlcklkKVxuXG4gICAgICAgIGlmICghdXNlcikgdGhyb3cgbmV3IE5vdEZvdW5kRXJyb3IoYHVzZXIgd2l0aCBpZCAke3VzZXJJZH0gbm90IGZvdW5kYClcblxuICAgICAgICBhd2FpdCBTcG90LmZpbmRPbmVBbmRVcGRhdGUoeyBfaWQ6IHNwb3RJZCwgcHVibGlzaGVySWQ6IHVzZXJJZCB9LCB7ICRzZXQ6IGJvZHksIGJvb2tpbmdDYW5kaWRhdGVzOiBbXSwgc3RhdHVzOiAnYXZhaWxhYmxlJ30pXG5cbiAgICAgICAgY29uc3Qgc3BvdCA9IGF3YWl0IFNwb3QuZmluZEJ5SWQoc3BvdElkKVxuXG4gICAgICAgIGlmICghc3BvdCkgdGhyb3cgbmV3IE5vdEZvdW5kRXJyb3IoYHNwb3Qgd2l0aCBpZCAke3Nwb3RJZH0gbm90IGZvdW5kYClcbiAgICAgICAgXG4gICAgICAgIHNwb3QuYm9va2VkVG8gPSB1bmRlZmluZWRcblxuICAgICAgICBhd2FpdCBzcG90LnNhdmUoKVxuXG4gICAgICAgIHJldHVybiBzcG90XG4gICAgXG4gICAgfSkoKVxuXG59Il19